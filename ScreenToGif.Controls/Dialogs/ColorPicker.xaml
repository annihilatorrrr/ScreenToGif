<c:ExWindow x:Class="ScreenToGif.Controls.Dialogs.ColorPicker"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:ScreenToGif.Controls"
        xmlns:v="clr-namespace:ScreenToGif.Util.Converters;assembly=ScreenToGif.Util"
        xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        Title="{DynamicResource S.ColorSelector.Title}" WindowStyle="None" Width="800" Height="500" MinWidth="650" MinHeight="450" MaxHeight="1000" MaxWidth="1600"
        WindowStartupLocation="CenterScreen" Topmost="True" ShowMaximizeButton="False" ShowMinimizeButton="False"
        ExtendIntoTitleBar="True" ShowCustomCaptionButtons="True" Loaded="Window_Loaded">

    <Grid Background="{DynamicResource Brush.Dialog.Background.Alt}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="{DynamicResource S.ColorSelector.Select}" FontWeight="SemiBold" FontSize="20" FontFamily="Segoe UI" TextWrapping="Wrap" Margin="24,24,24,6"/>

        <Grid Grid.Row="1" Margin="24,6,24,6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="330"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!--Color Matrix-->
                <Border Grid.Row="0" x:Name="ColorMatrixBorder" HorizontalAlignment="Stretch" Cursor="Cross" Margin="5" CornerRadius="4" ClipToBounds="True"
                        IsEnabled="False" SizeChanged="ColorMatrixBorder_SizeChanged" PreviewMouseMove="ColorMatrixBorder_MouseMove"
                        PreviewMouseLeftButtonDown="ColorMatrixBorder_MouseLeftButtonDown" MouseLeftButtonUp="ColorMatrixBorder_MouseLeftButtonUp">

                    <Border.Resources>
                        <v:AlphaToOpacity x:Key="AlphaToOpacity"/>
                    </Border.Resources>

                    <Border.Background>
                        <DrawingBrush Opacity="{Binding Path=Value, ElementName=AlphaIntegerUpDown, Converter={StaticResource AlphaToOpacity}}">
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,100,100"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <SolidColorBrush Color="{Binding SelectedColor, ElementName=ColorSlider}"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>

                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,100,100"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                                <GradientStop Offset="0.0" Color="Black"/>
                                                <GradientStop Offset="1.0" Color="{Binding SelectedColor, ElementName=ColorSlider}"/>
                                            </LinearGradientBrush>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>

                                    <DrawingGroup o:Freeze="True">
                                        <DrawingGroup.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <GradientStop Offset="0.0" Color="#FF000000"/>
                                                <GradientStop Offset="1" Color="#00000000"/>
                                            </LinearGradientBrush>
                                        </DrawingGroup.OpacityMask>

                                        <GeometryDrawing>
                                            <GeometryDrawing.Geometry>
                                                <RectangleGeometry Rect="0,0,100,100"/>
                                            </GeometryDrawing.Geometry>

                                            <GeometryDrawing.Brush>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="White"/>
                                                    <GradientStop Offset="1" Color="Black"/>
                                                </LinearGradientBrush>
                                            </GeometryDrawing.Brush>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Border.Background>

                    <Border.Triggers>
                        <!--To prevent false MouseUps during load. xD-->
                        <EventTrigger RoutedEvent="Border.Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="00:00:00" Storyboard.TargetName="ColorMatrixBorder" Storyboard.TargetProperty="(IsEnabled)">
                                    <BooleanAnimationUsingKeyFrames>
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Border.Triggers>

                    <Path x:Name="ColorMarker" StrokeThickness="2" Cursor="Cross" Fill="Transparent" RenderTransformOrigin="0.5,0.5">
                        <Path.Data>
                            <EllipseGeometry RadiusX="7" RadiusY="7"/>
                        </Path.Data>

                        <Path.Stroke>
                            <RadialGradientBrush>
                                <GradientStop Color="Black" Offset="0.5"/>
                                <GradientStop Color="White" Offset="1"/>
                                <GradientStop Color="White"/>
                                <GradientStop Color="Black" Offset="0.3"/>
                                <GradientStop Color="Black" Offset="0.7"/>
                            </RadialGradientBrush>
                        </Path.Stroke>
                    </Path>
                </Border>

                <!--Color Selections-->
                <Grid Grid.Row="1" Margin="5" Height="24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width=".15*"/>
                    </Grid.ColumnDefinitions>

                    <!--Checkered Background-->
                    <Border Grid.Column="0" Grid.ColumnSpan="3" CornerRadius="4">
                        <Border.Background>
                            <DrawingBrush Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="{DynamicResource Brush.Fill.Control.Default}">
                                            <GeometryDrawing.Geometry>
                                                <RectangleGeometry Rect="0,0 100,100"/>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>

                                        <GeometryDrawing Brush="{DynamicResource Brush.Fill.Control.Tertiary}">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0 50,50"/>
                                                    <RectangleGeometry Rect="50,50 50,50"/>
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Border.Background>
                    </Border>

                    <Border Name="InitialColor" Grid.Column="0" Background="White" Cursor="Hand" CornerRadius="4,0,0,4"
                            ToolTip="{DynamicResource S.ColorSelector.Initial}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                            MouseLeftButtonDown="InitialColor_MouseLeftButtonDown"/>

                    <Border Name="CurrentColor" Grid.Column="1" Background="White"
                            ToolTip="{DynamicResource S.ColorSelector.Current}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                    <Border Name="LastColor" Grid.Column="2" Background="White" CornerRadius="0,4,4,0"
                            ToolTip="{DynamicResource S.ColorSelector.Latest}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                </Grid>
            </Grid>

            <!--Color Spectrum-->
            <c:SpectrumSlider Grid.Column="1" x:Name="ColorSlider" Value="0" IsMoveToPointEnabled="True" IsSnapToTickEnabled="False" Maximum="360" 
                              Orientation="Vertical" HorizontalAlignment="Right" Width="36" Margin="5"
                              ValueChanged="ColorSlider_ValueChanged" ColorSelected="ColorSlider_ColorSelected"/>

            <!--Alpha Spectrum-->
            <c:SpectrumSlider Grid.Column="2" x:Name="AlphaSlider" Value="0" IsMoveToPointEnabled="True" IsSnapToTickEnabled="False" Maximum="255" 
                              Orientation="Vertical" HorizontalAlignment="Right" Width="36" Margin="5,5,0,5" IsAlphaSpectrum="True"
                              ToolTip="{DynamicResource S.ColorSelector.Alpha}" ValueChanged="ColorSlider_ValueChanged" ColorSelected="ColorSlider_ColorSelected"/>

            <!--Fields-->
            <Grid Grid.Column="3" Margin="5,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="120"/>
                    <ColumnDefinition Width="Auto" MinWidth="20"/>
                </Grid.ColumnDefinitions>

                <c:HexadecimalBox Grid.Row="0" Grid.Column="0" x:Name="ColorHexadecimalBox" Margin="5" 
                                  Alpha="{Binding ElementName=AlphaIntegerUpDown, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Red="{Binding ElementName=RedIntegerUpDown, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Green="{Binding ElementName=GreenIntegerUpDown, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Blue="{Binding ElementName=BlueIntegerUpDown, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource S.ColorSelector.Hexadecimal}" Foreground="{DynamicResource Brush.Foreground}" Margin="5" VerticalAlignment="Center"/>

                <c:IntegerStepper Grid.Row="1" Grid.Column="0" x:Name="RedIntegerUpDown" Margin="5" MaxLength="4" Padding="2,0" Maximum="255" 
                                  MouseWheel="ValueBox_MouseWheel" ValueChanged="ArgbText_ValueChanged"/>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="{DynamicResource S.ColorSelector.Red}" Foreground="{DynamicResource Brush.Foreground}" Margin="5" VerticalAlignment="Center"/>

                <c:IntegerStepper Grid.Row="2" Grid.Column="0" x:Name="GreenIntegerUpDown" Margin="5" MaxLength="4" Padding="2,0" Maximum="255" 
                                  MouseWheel="ValueBox_MouseWheel" ValueChanged="ArgbText_ValueChanged"/>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="{DynamicResource S.ColorSelector.Green}" Foreground="{DynamicResource Brush.Foreground}" Margin="5" VerticalAlignment="Center"/>

                <c:IntegerStepper Grid.Row="3" Grid.Column="0" x:Name="BlueIntegerUpDown" Margin="5" MaxLength="4" Padding="2,0" Maximum="255"
                                  MouseWheel="ValueBox_MouseWheel" ValueChanged="ArgbText_ValueChanged"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Text="{DynamicResource S.ColorSelector.Blue}" Foreground="{DynamicResource Brush.Foreground}" Margin="5" VerticalAlignment="Center"/>

                <c:IntegerStepper Grid.Row="4" Grid.Column="0" x:Name="AlphaIntegerUpDown" Margin="5" MaxLength="4" Padding="2,0" Maximum="255" 
                                  MouseWheel="ValueBox_MouseWheel" ValueChanged="ArgbText_ValueChanged"/>
                <TextBlock Grid.Row="4" Grid.Column="1" x:Name="AlphaLabel" Text="{DynamicResource S.ColorSelector.Alpha}" Foreground="{DynamicResource Brush.Foreground}" Margin="5" VerticalAlignment="Center"/>

                <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2">
                    <c:ExButton x:Name="EyeDropperButton" Margin="5" Style="{StaticResource Style.Button.Borderless}"
                                HorizontalContentAlignment="Center" Padding="3" TabIndex="2" ToolTip="{DynamicResource S.ColorSelector.Sample.Info}"
                                ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5" PreviewMouseDown="EyeDropperButton_PreviewMouseDown">
                        <c:ExButton.Content>
                            <StackPanel>
                                <c:SymbolIcon Symbol="Add" FontSize="30" Margin="5"/>
                                <TextBlock Text="{DynamicResource S.ColorSelector.Sample}"/>
                            </StackPanel>
                        </c:ExButton.Content>
                    </c:ExButton>

                    <Image x:Name="EyeDropperImage" Margin="5" Opacity="0" IsHitTestVisible="False" RenderOptions.BitmapScalingMode="NearestNeighbor" 
                           Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Width="{Binding ElementName=EyeDropperButton, Path=ActualWidth}" Height="{Binding ElementName=EyeDropperButton, Path=ActualHeight}"/>

                    <c:SymbolIcon Opacity="{Binding ElementName=EyeDropperImage, Path=Opacity}" Symbol="Add" FontSize="30"
                                  VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Height="50" Width="50"/>
                </Grid>
            </Grid>
        </Grid>

        <Separator Grid.Row="2" Height="1"/>

        <Grid Grid.Row="3" Background="{DynamicResource Brush.Window.Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <c:ExButton Grid.Column="0" x:Name="PositiveButton" Content="{DynamicResource S.Imperative.Select}" Margin="24,24,4,24" IsAccented="True" IsDefault="True" Click="OkButton_Click"/>
            <c:ExButton Grid.Column="1" x:Name="NegativeButton" Content="{DynamicResource S.Cancel}" Margin="4,24,24,24" IsCancel="True"/>
        </Grid>
    </Grid>
</c:ExWindow>