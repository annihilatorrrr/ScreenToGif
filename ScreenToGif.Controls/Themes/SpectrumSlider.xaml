<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:n="clr-namespace:ScreenToGif.Controls">

    <!--ColorThumb-->
    <Style x:Key="{x:Type n:ColorThumb}" TargetType="{x:Type n:ColorThumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Fill.Control.Strong.Default}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Elevation.Control.Border}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Viewbox>
                        <Grid Background="Transparent" Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*"/>
                                <ColumnDefinition Width="6*" MinWidth="10"/>
                                <ColumnDefinition Width="4*"/>
                            </Grid.ColumnDefinitions>

                            <Polygon Grid.Column="0" x:Name="LeftPolygon" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" 
                                     StrokeThickness="0.5" Points="0.5,0 5.5,4.5 0.5,9" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                            <Polygon Grid.Column="2" x:Name="RightPolygon" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" 
                                     StrokeThickness="0.5" Points="5.5,0 0.5,4.5 5.5,9" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Fill.Control.Strong.Default}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Elevation.Control.Border}"/>
            </Trigger>

            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Fill.Control.Strong.Default}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Stroke.Control.Default}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Fill.Control.Disabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Stroke.Control.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--SpectrumSlider-->
    <Style x:Key="{x:Type n:SpectrumSlider}" TargetType="{x:Type n:SpectrumSlider}">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="TickFrequency" Value="0.001"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="IsDirectionReversed" Value="False"/>
        <Setter Property="Value" Value="1"/>

        <Setter Property="Background">
            <Setter.Value>
                <DrawingBrush Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{DynamicResource Brush.Fill.Control.Default}">
                                <GeometryDrawing.Geometry>
                                    <RectangleGeometry Rect="0,0 100,100"/>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>

                            <GeometryDrawing Brush="{DynamicResource Brush.Fill.Control.Tertiary}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0 50,50"/>
                                        <RectangleGeometry Rect="50,50 50,50"/>
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type n:SpectrumSlider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}" CornerRadius="4">
                        <Grid MinWidth="{TemplateBinding Slider.MinWidth}" ClipToBounds="False">
                            <Border x:Name="SpectrumBorder" Width="Auto" CornerRadius="4" VerticalAlignment="Stretch"/>

                            <Track Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="DecreaseRepeatButton" Template="{DynamicResource Template.RepeatButton.Simple}" Command="Slider.DecreaseLarge"/>
                                </Track.DecreaseRepeatButton>

                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="IncreaseRepeatButton" Template="{DynamicResource Template.RepeatButton.Simple}" Command="Slider.IncreaseLarge"/>
                                </Track.IncreaseRepeatButton>

                                <Track.Thumb>
                                    <n:ColorThumb x:Name="ColorThumb" Height="Auto" ThumbColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Margin="-1,-10"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="21"/>
                        </Trigger>

                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="104"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>