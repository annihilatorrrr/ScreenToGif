<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:n="clr-namespace:ScreenToGif.Controls"
                    xmlns:c="clr-namespace:ScreenToGif.Util.Converters;assembly=ScreenToGif.Util">

    <Style TargetType="{x:Type n:DisplayTimer}">
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="5,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type n:DisplayTimer}">
                    <Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding CornerRadius}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <Border.ToolTip>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" x:Name="ElapsedTooltipTextBlock" Text="{DynamicResource S.Recorder.Timer.Elapsed}"/>

                                <TextBlock Grid.Row="1" x:Name="AutomaticTooltipTextBlock">
                                    <Run Text="{DynamicResource S.Recorder.Timer.Total}"/>
                                    <Run Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CapturedCount, StringFormat={}{0:N0}}"/>
                                </TextBlock>

                                <TextBlock Grid.Row="2" x:Name="ManualTooltipTextBlock">
                                    <Run Text="{DynamicResource S.Recorder.Timer.Manual}"/>
                                    <Run Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ManuallyCapturedCount, StringFormat={}{0:N0}}"/>
                                </TextBlock>

                                <TextBlock Grid.Row="3" x:Name="PausedTooltipTextBlock" Text="{DynamicResource S.Recorder.Timer.Paused}" Margin="0,3,0,0" Visibility="Collapsed"/>
                                <TextBlock Grid.Row="3" x:Name="ImpreciseTooltipTextBlock" Text="{DynamicResource S.Recorder.Timer.Imprecise}" Margin="0,3,0,0" FontWeight="SemiBold" Visibility="Collapsed"/>
                            </Grid>
                        </Border.ToolTip>

                        <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Grid.Resources>
                                <c:TimeSpanToString x:Key="TimeSpanToString"/>
                            </Grid.Resources>

                            <n:SymbolIcon Grid.Column="0" x:Name="ImpreciseBorder" Symbol="WarningFilled" FontSize="14" Height="13" Width="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <n:SymbolIcon Grid.Column="1" x:Name="PauseBorder" Symbol="PauseFilled" FontSize="13" Height="13" Width="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <TextBlock Grid.Column="2" x:Name="NegativeTextBlock" FontSize="14" Padding="0" Margin="0" Text="-" Visibility="Collapsed"/>
                            <TextBlock Grid.Column="3" x:Name="ElapsedTextBlock" FontSize="14" Padding="0" Margin="0" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Elapsed, Converter={StaticResource TimeSpanToString}}"/>

                            <TextBlock Grid.Column="4" x:Name="ManualTextBlock" FontSize="14" Padding="0" Margin="2,0,0,0" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ManuallyCapturedCount, StringFormat={}+{0:0}}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRunning" Value="False">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.7"/>
                        </Trigger>

                        <Trigger Property="IsPaused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="PauseBorder">
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.1" From="0" To="13"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.1" From="0" To="0,0,3,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="PauseBorder">
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.1" From="13"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.1" From="0,0,3,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter TargetName="PausedTooltipTextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsImpreciseCapture" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ImpreciseBorder">
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.1" From="0" To="12"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.1" From="0" To="0,0,3,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="ImpreciseBorder">
                                        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.1" From="12"/>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.1" From="0,0,3,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter TargetName="ImpreciseTooltipTextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsNegative" Value="True">
                            <Setter TargetName="NegativeTextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="Elapsed" Value="{x:Static s:TimeSpan.Zero}">
                            <Setter TargetName="ElapsedTextBlock" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ElapsedTooltipTextBlock" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="ManuallyCapturedCount" Value="0">
                            <Setter TargetName="ManualTextBlock" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ManualTooltipTextBlock" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="CapturedCount" Value="0">
                            <Setter TargetName="AutomaticTooltipTextBlock" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Elapsed" Value="{x:Static s:TimeSpan.Zero}"/>
                                <Condition Property="ManuallyCapturedCount" Value="0"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>