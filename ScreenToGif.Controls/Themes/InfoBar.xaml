<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:n="clr-namespace:ScreenToGif.Controls">

    <Style TargetType="{x:Type n:InfoBar}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="MinHeight" Value="42"/>
        <Setter Property="Background" Value="{DynamicResource Brush.InfoBar.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.InfoBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type n:InfoBar}">
                    <Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <Border.Resources>
                            <Storyboard x:Key="HideStoryboard">
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" From="{Binding ElementName=MainBorder,Path=Opacity}" To="0" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase Power="8"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>

                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Visibility)" Duration="0:0:0.5">
                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0.2"/>
                                </ObjectAnimationUsingKeyFrames>

                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.IsHitTestVisible)" Duration="0:0:0.0">
                                    <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.0"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="ShowStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Visibility)" Duration="0:0:0" >
                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                </ObjectAnimationUsingKeyFrames>

                                <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" From="0" To="1" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase Power="8"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>

                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.IsHitTestVisible)" Duration="0:0:0.0">
                                    <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.0"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </Border.Resources>

                        <Grid Margin="6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Background="{DynamicResource Brush.InfoBar.Glyph.Foreground}" BorderThickness="0" Margin="5,9,5,9"
                                    CornerRadius="9999" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <n:SymbolIcon x:Name="SymbolIcon" Symbol="InfoFilled" Foreground="{DynamicResource Brush.InfoBar.Glyph}"
                                              VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            
                            <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" FontSize="14" FontWeight="SemiBold"
                                       Foreground="{DynamicResource Brush.Foreground}" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Margin="5,9,5,9"/>

                            <TextBlock Grid.Column="2" Text="{TemplateBinding Description}" FontSize="14" 
                                       Foreground="{DynamicResource Brush.Foreground}" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Margin="5,9,5,9"/>

                            <ContentPresenter Grid.Column="3" x:Name="ContentPresenter" Margin="0,0,5,0" Focusable="False" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                            <n:HyperlinkButton Grid.Column="4" x:Name="SuppressButton" MinWidth="30" ToolTip="{DynamicResource S.Suppress}"
                                               ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5">
                                <n:SymbolIcon Symbol="Dismiss"/>
                            </n:HyperlinkButton>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Type" Value="Warning">
                            <Setter Property="Background" Value="{DynamicResource Brush.InfoBar.Background.Warning}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.InfoBar.Border.Warning}"/>
                            <Setter TargetName="SymbolIcon" Property="Foreground" Value="{DynamicResource Brush.InfoBar.Glyph.Warning}"/>
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="WarningFilled"/>
                        </Trigger>

                        <Trigger Property="Type" Value="Error">
                            <Setter Property="Background" Value="{DynamicResource Brush.InfoBar.Background.Error}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.InfoBar.Border.Error}"/>
                            <Setter TargetName="SymbolIcon" Property="Foreground" Value="{DynamicResource Brush.InfoBar.Glyph.Error}"/>
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="DismissCircleFilled"/>
                        </Trigger>

                        <Trigger Property="Type" Value="Success">
                            <Setter Property="Background" Value="{DynamicResource Brush.InfoBar.Background.Success}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.InfoBar.Border.Success}"/>
                            <Setter TargetName="SymbolIcon" Property="Foreground" Value="{DynamicResource Brush.InfoBar.Glyph.Success}"/>
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="CheckmarkFilled"/>
                        </Trigger>

                        <Trigger Property="Type" Value="Update">
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="SyncFilled"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>